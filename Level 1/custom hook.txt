1.hook for auth provider ---------------------------------------
    import { useContext } from "react";
    import { AuthContext } from "../Providers/AuthProvider";
    const useAuth = () => {
       const auth = useContext(AuthContext);
       return auth;
    };
    export default useAuth;

2.1.hook for get server site data ----------------------------------
    import { useEffect, useState } from "react";
    const useServices = () => {
       const [services, setServices] = useState([]);
       useEffect(()=> {
         fetch('http://localhost:5000/services')
           .then(res => res.json())
           .then(data => setServices(data))
       },[])
       return services;
    };
    export default useServices;

2.2.hook use  -------------------------------------------------------
    import useServices from "../../../hooks/useServices";  
    const services = useServices();
       {
          services.map(service => <Service key={service._id} service={service}></Service>)
       }

3.1.hook for get server site data and make it secure ---------------
    import axios from "axios";
    import { useContext, useEffect } from "react";
    import { AuthContext } from "../Providers/AuthProvider";
    import { useNavigate } from "react-router-dom";
    const axiosSecure = axios.create({
       baseURL:'http://localhost:5000',
       withCredentials: true
    })
    const useAxiosSecure = () => {
       const {logOut} = useContext(AuthContext);
       const navigate = useNavigate();
       useEffect(() => {
          axiosSecure.interceptors.response.use(res =>{
             return res;
          },error => {
              console.log('error tracked in interceptor', error.response);
              if(error.response.status === 401 ||error.response.status === 403){
                 console.log('logout this user');
                 logOut()
                 .then(()=>{
                    navigate("/signIn")
                  })
                  .catch(error => {
                     console.log(error);
                 })
               }
             })
        },[])
       return axiosSecure;
      };
      export default useAxiosSecure;

3.2.hook use  -------------------------------------------------------
     import useAxiosSecure from "../../hooks/useAxiosSecure";
     const axiosSecure = useAxiosSecure();
        useEffect(() => {
           axiosSecure.get(url)
            .then(res => setBookings(res.data))
        },[url, axiosSecure])
     console.log(bookings);

